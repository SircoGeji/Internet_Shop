@mixin anim($time,$delay){transition: all $time ease $delay;-webkit-transition: all $time ease $delay;-moz-transition: all $time ease $delay;-ms-transition: all $time ease $delay;-o-transition: all $time ease $delay;}
@mixin anim_cubic($time,$delay){transition:all $time cubic-bezier(0.68,-0.55,0.265,1.55) $delay;-webkit-transition:all $time cubic-bezier(0.68,-0.55,0.265,1.55) $delay;-moz-transition:all $time cubic-bezier(0.68,-0.55,0.265,1.55) $delay;-ms-transition:all $time cubic-bezier(0.68,-0.55,0.265,1.55) $delay;-o-transition:all $time cubic-bezier(0.68,-0.55,0.265,1.55) $delay;}
@mixin animate($name,$time,$infinite,$type){animation:$name $time+s $infinite $type;-webkit-animation:$name $time+s $infinite $type;-moz-animation:$name $time+s $infinite $type;-ms-animation:$name $time+s $infinite $type;-o-animation:$name $time+s $infinite $type;}
@mixin rotate($deg){transform:rotate($deg);-webkit-transform:rotate($deg);-moz-transform:rotate($deg);-ms-transform:rotate($deg);-o-transform:rotate($deg);}
@mixin scale($num){transform:scale($num);-webkit-transform:scale($num);-moz-transform:scale($num);-ms-transform:scale($num);-o-transform:scale($num);}
@mixin skew($num){transform:skew($num);-webkit-transform:skew($num);-moz-transform:skew($num);-ms-transform:skew($num);-o-transform:skew($num);}
@mixin cnt($h){display: flex;flex-direction: column;height: $h;text-align: center;align-items: stretch;justify-content: center;}
@mixin tr($x, $y, $z){transform: translate3d($x, $y, $z);-webkit-transform: translate3d($x, $y, $z);-ms-transform: translate3d($x, $y, $z);-moz-transform: translate3d($x, $y, $z);-o-transform: translate3d($x, $y, $z);}
@mixin flexbox(){display: -webkit-box;display: -moz-box;display: -webkit-flex;display: -ms-flexbox;display: flex;}
@mixin inline-flex(){display: -moz-inline-box;display: -webkit-inline-flex;display: -ms-inline-flexbox;display: inline-flex;}
@mixin flexorder($val){-webkit-box-ordinal-group: $val;-moz-box-ordinal-group: $val;-ms-box-ordinal-group: $val;-o-box-ordinal-group: $val;-webkit-order: $val;-ms-order: $val;-moz-order: $val;-o-order: $val;}

@mixin font($font_name, $file_name, $weight, $style) {
  @font-face {
    font-family: $font_name;
    font-display: swap;
    src: url("../fonts/#{$file_name}.woff") format("woff"), url("../fonts/#{$file_name}.woff2") format("woff2");
    font-weight: #{$weight};
    font-style: #{$style};
  }
}

@mixin adaptive-font($pcSize, $mobSize, $maxSize) {
  $addSize: $pcSize - $mobSize;
  @if $maxSize==1 {
    font-size: $pcSize + px;
    @media (max-width: #{$maxWidthContainer + px}) {
      font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
  } @else {
    font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
  }
}